public  class Anima {
    abstract static class Animal {
        private final int MAX_RUN_LENGTH = 0;
        private final int MAX_SWIM_LENGTH = 0;
        private final double MAX_JUMP_HEIGTH = 0;

        abstract void run(int length);

        abstract void swim(int length);

        abstract void jump(double height);
    }

    public static class Cat extends Animal {
        private final int MAX_RUN_LENGTH = 200;
        private final double MAX_JUMP_HEIGTH = 2;
        @Override
        void run(int length) {
            if ((length >= 0) && (length <= MAX_RUN_LENGTH)) System.out.println("и у неё получилось =)");
            else System.out.println("и у неё не получилось =(");
        }

        @Override
        void swim(int length) {
            System.out.println("и у неё не получилось =(");
        }

        @Override
        void jump(double height) {
            if ((height >= 0) && (height <= MAX_JUMP_HEIGTH)) System.out.println("и у неё получилось =)");
            else System.out.println("и у неё не получилось =(");
        }
    }

    public static class Dog extends Animal {
        private final int MAX_RUN_LENGTH = 500;
        private final int MAX_SWIM_LENGTH = 10;
        private final double MAX_JUMP_HEIGTH = 0.5;

        @Override
        void run(int length) {
            if ((length >= 0) && (length <= MAX_RUN_LENGTH)) System.out.println("и у неё получилось =)");
        }

        @Override
        void swim(int length) {
            if ((length >= 0) && (length <= MAX_SWIM_LENGTH)) System.out.println("и у неё получилось =)");
            else System.out.println("и у неё не получилось =(");
        }

        @Override
        void jump(double height) {
            if ((height >= 0) && (height <= MAX_JUMP_HEIGTH)) System.out.println("и у неё получилось =)");
            else System.out.println("и у неё не получилось =(");
        }
    }


}
